var searchIndex = JSON.parse('{\
"quantity":{"doc":"The Quantity Programming Language","t":[0,0,0,5,0,5,0,3,11,11,11,11,11,11,12,11,11,11,11,11,5,5,11,11,11,11,11,2,0,0,5,5,2,2,0,0,3,11,11,11,12,11,11,11,11,11,12,11,11,11,13,13,4,11,11,11,11,11,11,11,11,12,12,12,12,2,0,2,0,0,5,5,5,5,13,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["docs","interface","interpreting","main","parsing","run","scanning","Cli","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","filename","from","from_arg_matches","from_arg_matches_mut","group_id","into","run_file","run_prompt","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","interpret","interpreter","types","interpret","interpret_node","Parser","TreeNode","parser","tree","Parser","borrow","borrow_mut","from","index","into","parse","parse_tokens","primary","term","tokens","try_from","try_into","type_id","Binary","Number","TreeNode","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","0","0","1","2","Token","matching","scan_source","scanner","tokens","match_identifier","match_number","skip_line","scan_source","Eof","Eol","Equal","Identifier","LeftParenthesis","Number","Plus","Qty","RightParenthesis","Token","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","to_owned","try_from","try_into","type_id","0","0"],"q":["quantity","","","","","","","quantity::interface","","","","","","","","","","","","","","","","","","","","quantity::interpreting","","","quantity::interpreting::interpreter","","quantity::parsing","","","","quantity::parsing::parser","","","","","","","","","","","","","","quantity::parsing::tree","","","","","","","","","","","quantity::parsing::tree::TreeNode","","","","quantity::scanning","","","","","quantity::scanning::matching","","","quantity::scanning::scanner","quantity::scanning::tokens","","","","","","","","","","","","","","","","","","","","","","quantity::scanning::tokens::Token",""],"d":["This module contains documentation related to the language …","The interface module contains logic that allows the …","","","","","","","","","","","","","Optional quantity file to execute","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","The matching module contains various utility functions to …","","","","Parses an identifier out of a series of characters","Parses a number out of a series of numerical characters","Skips the current line by searching for the nearest …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,12,12,0,12,12,12,12,12,12,12,12,22,23,23,23,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,24,25],"f":[0,0,0,[[],1],0,[2],0,0,[3,3],[3,3],[[]],[[]],[[],3],[[],3],0,[[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[[],[[9,[8]]]],[[]],[10,1],[[],1],[[],7],[[],7],[[],11],[[5,4],[[7,[6]]]],[[5,4],[[7,[6]]]],0,0,0,[[[13,[12]]],1],[12,[[1,[14]]]],0,0,0,0,0,[[]],[[]],[[]],0,[[]],[15,[[13,[12]]]],[[[13,[16]]],[[13,[12]]]],[15,12],[15,12],0,[[],7],[[],7],[[],11],0,0,0,[[]],[[]],[[12,17],18],[[]],[[]],[[],7],[[],7],[[],11],0,0,0,0,0,0,0,0,0,[19],[19],[19],[[[20,[2]]],[[13,[16]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[16,16],[[]],[[16,16],21],[[16,17],18],[[]],[[]],[[]],[[],7],[[],7],[[],11],0,0],"p":[[6,"Result"],[3,"String"],[3,"Command"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"PathBuf"],[3,"TypeId"],[4,"TreeNode"],[3,"Vec"],[15,"f64"],[3,"Parser"],[4,"Token"],[3,"Formatter"],[6,"Result"],[15,"usize"],[8,"Into"],[15,"bool"],[13,"Number"],[13,"Binary"],[13,"Number"],[13,"Identifier"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
